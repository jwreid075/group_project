//Widget_Status: Handles Widget's state machine.
//Keep track of health, energy and all the chunky stuff

//vitals--------------------------------------------------------------
var health: float = 10.0;
var maxHealth: float= 10.0;
var jump : float = 0.0;
var maxJump : float = 10.0;
var energy: float = 10.0;
var maxEnergy: float = 10.0;
var energyUsageForTransform: float = 3.0;
var widgetBoostUsage :float = 5.0;

//Cache Controllers---------------------------------------------------
var playerController: Widget_Controller; 
playerController = GetComponent(Widget_Controller) ;
var controller : CharacterController;
controller = GetComponent(CharacterController);

private var isDead: boolean = false;

//Helper Controller Functions-----------------------------------------
function ApplyDamage(damage: float){
    
    health -= damage;
    
    //check health and call Die if need to
    if(health <= 0){
        health = 0; //for GUI
        Die();    
    }
}

function AddJump(boost : float)
{
	jump += boost;
	if(jump >= maxJump)
	{
		jump = maxJump;
	}
	return jump;
}


function AddHealth(boost: float){
    //add health and set to min of (current health+boost) or health max
    health += boost;
    if(health >= maxHealth){
        health = maxHealth;
    }
    print("added health: " + health);
}

function AddEnergy(boost: float){

	//add energy and set to min of (current energy + boost) or eneregy maximum
	energy += boost;
    if(energy >= maxEnergy){
        energy = maxEnergy;
    }
    print("added energy: " + energy);
}

function Die(){
    print("dead!");
    playerController.isControllable = false;
    yield WaitForSeconds(GetComponent(Animation)["Die"].length -0.2);
    
HideCharacter();
    yield WaitForSeconds(1);
    isDead = true;

    //We Doing it.



   	
}

function OnGUI()
{
	if(isDead == true)
	{
		if(GUI.Button(Rect(Screen.width/2 - 126, Screen.height-100, 250, 50), "Respawn"))
	    {
	        Respawn();
	   	}
	    if(GUI.Button(Rect(Screen.width/2 - 126, Screen.height - 50, 250, 50), "Quit"))
	    {
	    	Application.Quit();
	    }
	}
}

function HideCharacter(){
    GameObject.Find("Body").GetComponent(SkinnedMeshRenderer).enabled = false;
    GameObject.Find("Wheels").GetComponent
                   (SkinnedMeshRenderer).enabled = false;
    playerController.isControllable = false;
}

function ShowCharacter(){
    GameObject.Find("Body").GetComponent(SkinnedMeshRenderer).enabled = true;
    GameObject.Find("Wheels").GetComponent(SkinnedMeshRenderer).enabled = true;
    playerController.isControllable = true;
}

function Respawn(){
	//restart player at last respawn check point and give max life
	if(CheckPoint.isActivePt){
        controller.transform.position = CheckPoint.isActivePt.transform.position;
        controller.transform.position.y += 0.5; 
                //so not to get stuck in the platform itself
    }
    ShowCharacter();
    health = maxHealth;
    isDead = false;
}

@script AddComponentMenu("Player/Widget'sStateManager")
